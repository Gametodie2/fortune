@use "../../assets/styles/variables" as *;
$grid-gap: 20px;

// De 'verborgen' staat voor de elementen
.animateOnScroll {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 1s ease-out, transform 1s ease-out;
}

// De 'zichtbare' staat die we toevoegen met JavaScript
.isVisible {
  opacity: 1;
  transform: translateY(0);
}

.scaleInItem {
  opacity: 0;
  // Begin ingezoomd (kleiner dan normaal)
  transform: scale(0.8);
  // Soepele overgang voor de schaal en de zichtbaarheid
  transition: transform 1.2s cubic-bezier(0.19, 1, 0.22, 1),
    opacity 1s cubic-bezier(0.19, 1, 0.22, 1);
}

// De 'zichtbare' staat
.itemIsVisible {
  opacity: 1;
  // Eindig op de normale grootte
  transform: scale(1);
}

.aboutSection {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

  margin-bottom: 5rem;
  margin-top: 5rem;

  @media screen and (max-width: 1280px) {
    padding: 2rem;
    margin-top: 3rem;
  }

  .aboutText {
    font-family: var(--font-exo);
    text-align: center;

    max-width: 1280px;
    width: 100%;

    h2 {
      font-size: $font-size-xxl;
      font-weight: 700;
      margin-bottom: 1rem;
    }

    .aboutDescription {
      font-size: $font-size-s;
      line-height: 1.6;
      color: var(--color-white-100);
      margin-bottom: 1.5rem; // Space between paragraphs
    }
  }

  .aboutCuisineSection {
    width: 100%;
    max-width: 1280px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2rem;

    text-align: left;

    margin: 5rem 0;

    h3 {
      font-size: $font-size-l;
      font-weight: 600;
      margin-bottom: 1rem;
    }

    p {
      font-size: $font-size-s;
      line-height: 1.6;
      color: var(--secondary-text-color);
      margin-bottom: 2rem; // Space before the grid section
    }
  }

  .aboutFeaturesContainer {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-flow: row wrap;
    gap: 2rem;

    margin: 5rem 0 4rem 0;
  }
}

.aboutGridSection {
  max-width: 1280px; // Limit max width for better readability on large screens
  margin: 0 auto; // Center the section

  width: 100%;

  // Basic styling for the grid items and images
  div[class*="gridItem"] {
    // Selects any div whose class contains "gridItem"
    position: relative; // Needed for positioning .noisy overlay
    overflow: hidden; // Ensures images don't overflow their containers
    border-radius: 16px; // Slightly rounded corners
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); // Subtle shadow

    img {
      width: 100%;
      height: 100%;
      object-fit: cover; // Ensures images cover the area without distortion
      display: block; // Removes extra space below images
    }
  }

  .noisy {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("/images/noise.png");
    background-size: cover;
    pointer-events: none;
    z-index: 1;
  }

  .topGrid,
  .bottomGrid {
    display: grid;
    gap: $grid-gap; // Gap between grid items
    margin-bottom: $grid-gap; // Space between top and bottom grids

    // Default for mobile (single column)
    grid-template-columns: 1fr;
  }

  /*
  ---
  Media Queries for Responsiveness (similar to md:col-span-X)
  Using 768px as a common breakpoint for 'md'
  ---
  */

  @media (min-width: 768px) {
    .topGrid {
      // For desktop, it's a 12-column grid system (3 + 6 + 3 = 12)
      grid-template-columns: repeat(12, 1fr);

      .gridItemCol3 {
        grid-column: span 3; // Occupy 3 columns
      }
      .gridItemCol6 {
        grid-column: span 6; // Occupy 6 columns
      }
    }

    .bottomGrid {
      // For desktop, it's a 12-column grid system (8 + 4 = 12)
      grid-template-columns: repeat(12, 1fr);

      .gridItemCol8 {
        grid-column: span 8; // Occupy 8 columns
      }
      .gridItemCol4 {
        grid-column: span 4; // Occupy 4 columns
      }
    }
  }
}
